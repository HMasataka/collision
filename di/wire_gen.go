// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"context"
	"github.com/HMasataka/collision/domain/entity"
	"github.com/HMasataka/collision/domain/service"
	"github.com/HMasataka/collision/infrastructure"
	"github.com/HMasataka/collision/infrastructure/persistence"
	"github.com/HMasataka/collision/usecase"
)

// Injectors from usecase.wire.go:

func InitializeUseCase(ctx context.Context, matchFunctions map[*entity.MatchProfile]entity.MatchFunction, assigner entity.Assigner, evaluator entity.Evaluator) *usecase.UseCaseContainer {
	client := infrastructure.NewClient()
	locker := infrastructure.NewLocker()
	repositoryContainer := persistence.NewRepositoryOnce(client, locker)
	ticketService := service.NewTicketService(client, locker, repositoryContainer)
	useCaseContainer := usecase.NewUseCaseOnce(matchFunctions, assigner, evaluator, repositoryContainer, ticketService)
	return useCaseContainer
}
